A51 MACRO ASSEMBLER  E3_X3                                                                08/24/2022 02:48:24 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\E3_X3.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE E3_X3.ASM SET(SMALL) DEBUG PRINT(.\Listings\E3_X3.lst) OBJECT(.\Objects
                      \E3_X3.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; Transfer ten elements of an array starting at location XX40h 
                       2     ; in external data memory to a location XX45 in the same memory
                       3     
0000                   4     ORG 0000H                               ; ORIGINATE
0000 0102              5     AJMP START                              ; JUMP TO THE LABEL START
                       6     
0002                   7     START:
0002 901049            8             MOV DPTR, #1049H        ; GO TO LAST ELEMENT OF THE ARRAY
0005 780A              9             MOV R0, #10             ; NUMBER OF ELEMENTS, DECIMAL 10
0007 7905             10             MOV R1, #05H            ; NUMBER OF ELEMENTS, DECIMAL 5, I.E. (XX49 - XX45 + 1)
                      11     
0009                  12     REPEAT:
0009 E9               13             MOV A, R1               ; GET DISPLACEMENT
000A FA               14             MOV R2, A                       ; COPY TO (R2)
                      15             
000B E0               16             MOVX A, @DPTR           ; GET THE DATA TO ACCUMULATOR
                      17     
                      18     ; INCREMENT DPTR BY (R1)
000C                  19     INCREMENT:
000C A3               20             INC DPTR
000D DAFD             21             DJNZ R2, INCREMENT
                      22     
000F F0               23             MOVX @DPTR, A           ; COPY DATA TO DESTINATION
                      24     
0010 E9               25             MOV A, R1               ; GET DISPLACEMENT AGAIN SINCE R2 IS DESTROYED
0011 FA               26             MOV R2, A                       ; COPY TO (R2)
0012 0A               27             INC R2                          ; SO AS TO POINT TO PREVIOUS LOCATION IN ORIGINAL A
                             RRAY
                      28     
                      29     ; DECREMENT DPTR BY (R1)+1; DEC DPTR IS NOT AVAILABLE
0013                  30     DECREMENT:
0013 C3               31             CLR C                           ; CLEAR CARRY
0014 E582             32             MOV A, DPL                      ; GET DPTR LOW
0016 9401             33             SUBB A, #01H            ; DECREMENT DPL
0018 F582             34             MOV DPL, A                      ; RESTORE DPL
                      35             
001A E583             36             MOV A, DPH                      ; GET DPTR HIGH
001C 9400             37             SUBB A, #00H            ; SUBTRACT CARRY [IF EXISTS] FROM (DPH)
001E F583             38             MOV DPH, A                      ; RESTORE DPH
                      39     
0020 DAF1             40             DJNZ R2, DECREMENT      ; REPEAT UNTIL (R2) IS ZERO
                      41     
0022 D8E5             42             DJNZ R0, REPEAT         ; LOOP UNTIL ARRAY LENGTH IS COVERED
                      43     
0024                  44     HERE:
0024 80FE             45             SJMP HERE                       ; LOGICAL END
                      46             END
A51 MACRO ASSEMBLER  E3_X3                                                                08/24/2022 02:48:24 PAGE     2

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

DECREMENT. . . . .  C ADDR   0013H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
HERE . . . . . . .  C ADDR   0024H   A   
INCREMENT. . . . .  C ADDR   000CH   A   
REPEAT . . . . . .  C ADDR   0009H   A   
START. . . . . . .  C ADDR   0002H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
