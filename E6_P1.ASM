; Implement an 8 - bit Octal up counter.

MOV A, #00H 			; INITIALISE
MOV R2, #08H 			; FOR UPPER NIBBLE (OCTAL BASE)

ITER:
	MOV R1, #08H  		; FOR LOWER NIBBLE (OCTAL BASE)
	L_ITER:
		MOV 60H, A 		; COPY DATA TO DISPLAY PLACEHOLDERS
		PUSH A 			; SAVE ACCUMULATOR
		LCALL UPDDT 	; DISPLAY PROGRAM
		LCALL DELAY 	; AWAIT
		POP A 			; RETRIEVE ACCUMULATOR
		ADD A, #01H 	; INCREMENT LOWER NIBBLE
		DJNZ R1, L_ITER ; FOR LOWER NIBBLE UPDATES

	U_ITER:
		ADD A, #08H 	; INCREMENT UPPER NIBBLE
		DJNZ R2, ITER 	; FOR UPPER NIBBLE UPDATES

	SJMP START 			; REPEAT IN A LOOP

DELAY:
	; AWAIT (04H*0FFH*0FFH) MACHINE CYCLES => ~0.26 SECONDS
	MOV R3, #04H
	UP1:
		MOV R4, #0FFH
		UP2:
			MOV R5, #0FFH
		DJNZ R4, UP2
	DJNZ R3, UP1

	RET 				; RETURN BACK TO THE MAIN LOOP
	END
